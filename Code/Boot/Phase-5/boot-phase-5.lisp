(cl:in-package #:sicl-boot-phase-5)

(defun finalize-all-classes (boot)
  (format *trace-output* "Finalizing all classes.~%")
  (let* ((e4 (sicl-boot:e4 boot))
         (finalization-function
           (sicl-genv:fdefinition 'sicl-clos:finalize-inheritance e4)))
    (do-all-symbols (var)
      (let ((class (sicl-genv:find-class var e4)))
        (unless (null class)
          (funcall finalization-function class)))))
  (format *trace-output* "Done finalizing all classes.~%"))

(defun boot-phase-5 (boot)
  (format *trace-output* "Start of phase 5~%")
  (with-accessors ((e3 sicl-boot:e3)
                   (e4 sicl-boot:e4)
                   (e5 sicl-boot:e5)
                   (e6 sicl-boot:e6)) boot
    (change-class e5 'environment)
    (enable-class-finalization boot)
    (finalize-all-classes boot)
    (enable-defmethod-in-e5 boot)
    (enable-allocate-instance-in-e4 e4)
    (enable-object-initialization boot)
    (enable-method-combinations-in-e5 boot)
    (enable-generic-function-invocation boot)
    (define-accessor-generic-functions boot)
    (enable-class-initialization-in-e5 e4 e5 e6)
    (create-mop-classes boot)))
