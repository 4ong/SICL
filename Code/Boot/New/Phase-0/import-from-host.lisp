(cl:in-package #:sicl-boot-phase-0)

(defun import-standard-common-lisp-functions (environment)
  (do-symbols (symbol (find-package '#:common-lisp))
    (when (fboundp symbol)
      (unless (special-operator-p symbol)
        (let ((definition (fdefinition symbol)))
          (when (functionp definition)
            (setf (sicl-genv:fdefinition symbol environment) definition)))))
    (when (fboundp `(setf ,symbol))
      (setf (sicl-genv:fdefinition `(setf ,symbol) environment)
            (fdefinition `(setf ,symbol))))))

(defun define-standard-common-lisp-special-operators (environment)
  (do-symbols (symbol (find-package '#:common-lisp))
    (when (special-operator-p symbol)
      (setf (sicl-genv:special-operator symbol environment) t))))

(defun import-from-cleavir-code-utilities (environment)
  (setf (sicl-genv:fdefinition 'cleavir-code-utilities:parse-macro environment)
        #'cleavir-code-utilities:parse-macro))

(defun import-macro-expanders (environment)
  (setf (sicl-genv:fdefinition 'sicl-data-and-control-flow:defun-expander environment)
        (fdefinition 'sicl-data-and-control-flow:defun-expander)))

(defun import-from-host (environment)
  (host-load "Data-and-control-flow/defun-support.lisp")
  (import-standard-common-lisp-functions environment)
  (define-standard-common-lisp-special-operators environment)
  (import-from-cleavir-code-utilities environment)
  (import-macro-expanders environment))
