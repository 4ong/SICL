What is done:

  A version of find-if. 
  A version of find-if-not
  Tests from Paul Dietz' ansi test suite for those functions

How to test it:

  1. Load lisp-unit.lisp and sequences.asd into your lisp system.

  2. Run (asdf:operate 'asdf:load-op :sicl-sequences-test).

  3. Do (in-package #:sicl-sequences-test).

  4. Do a (run-tests)

What remains to to:

  Add tests that use APPLY and non-constant keyword arguments, so that
  we can test the functions find-if and find-if-not, and not the
  specialized versions created by the compiler macro.

  Currently, the order-of-evaluation tests fail.  This is because the
  compiler macros are not careful enough to preserve order of
  evaluation.  Things can get pretty complicated there.  I wonder if
  it is worth the trouble for the compiler macros to identify all
  those special cases. 

  Add more sequence functions:

    find
    remove
    remove-if
    remove-if-not
    substite
    substitute-if
    substitute-if-not
    etc.
