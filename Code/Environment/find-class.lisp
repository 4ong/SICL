(cl:in-package #:sicl-global-environment)

(defun find-class (symbol &optional (errorp t) environment)
  (when (null environment)
    (setf environment *global-environment*))
  (let ((entry (assoc symbol (classes environment))))
    (if (and (null entry) errorp)
	(error "There is no class named ~s" symbol)
	(cdr entry))))

(defun (setf find-class) (new-class symbol &optional errorp environment)
  (declare (ignore errorp))
  (when (null environment)
    (setf environment *global-environment*))
  (if (null new-class)
      (setf (classes environment)
	    (remove symbol (classes environment)
		    :key #'car :test #'eq))
      (let ((entry (assoc symbol (classes environment))))
	(if (null entry)
	    (push (cons symbol new-class) (classes environment))
	    (setf (cdr entry) new-class))
	new-class)))
  
